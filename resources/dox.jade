div.dox
	if tags.length === 0
		div.summary !{description.summary}

	- var hasParams = false, hasReturn = false, hasAPI = false, hasType, author = false, properties = [], scope = {object: false, modifier: false}
	if tags.length
		div.details
			each tag in tags
				case tag.type
					when "param"
						if !hasParams
							div.dox_tag_title Params
							- hasParams = true
						div.dox_tag_detail 
							span #{tag.name} 
							if tag.types
								each type in tag.types 
									span.dox_type #{type}
							if tag.description
								span - !{tag.description}

					when "returns"
					when "return"
						if !hasReturn
							div.dox_tag_title Returns
							- hasReturn = true
						div.dox_tag_detail
							each type in tag.types 
								span.dox_type #{type}
							if tag.description
								span !{tag.description}

					when "type"
						if !hasType
							div.dox_tag_title Type
							- hasType = true
						div.dox_tag_detail
							each type in tag.types 
								span.dox_type #{type}

					when "api"
						div.dox_tag_title API
						div.dox_tag_detail 
							span.dox_type #{tag.visibility}

					when "method"
						div.dox_tag_title Method <em>#{tag.string}</em>

					when "see"
						div.dox_tag_title See
						div.dox_tag_detail
							if tag.url
								a(href="#{tag.url")
									if tag.title
										#{tag.title}
									else
										#{tag.url} 
							if tag.local
								span.dox_type #{tag.local}
								
					when "typedef"
						- var typedefName = tag.string.replace(/\{.*?\}\s+/, '');
						div.dox_tag_title Typedef <em>#{typedefName}</em>
						div.dox_tag_types
							span Types: 
							each type in tag.types
								span(class="dox_type type-#{type.toLowerCase()}")
									| #{type}
									
					when "namespace"
						div.dox_tag_title Namespace <em>#{tag.string}</em>
						
					when "class"
						div.dox_tag_title Class <em>#{tag.string}</em>
						
					when "classdesc"
						div.dox_tag_detail !{tag.string}
						
					when "summary"
					when "description"
						div.dox_tag_title #{tag.type.charAt(0).toUpperCase() + tag.type.slice(1).toLowerCase()}:
						div.dox_tag_detail !{tag.html}
						
					when "memberof"
						div.dox_tag_title In: <em>#{tag.string}</em>
						
					when "property"
						- properties.push(tag)
						
					when "author"
						- author = tag.string
						
						
						
					when "instance"
					when "static"
						- scope.object = tag.type
						
						
					when "public"
					when "protected"
					when "private"
						- scope.modifier = tag.type
						
						
						
							
					default
						div.dox_tag_title #{tag.type}
						div.dox_tag_detail
							| #{JSON.stringify(tag)}
							
			if scope.object || scope.modifier
				div.dox_tag_title Scope: 
					if scope.object
						span.object #{scope.object}
					if scope.modifier
						span.modifier #{scope.modifier}
			
			if properties.length > 0
				div.dox_tag_title Properties
				table.dox_properties.dox_tag_detail
					tr
						th Name
						th Types
						th Description
					each property in properties
						- var types = property.types.map(function(type){return type.replace(/\./g, '<span class="sep">.</span>')});
						tr.dox_property
							td #{property.name}
							td !{types.join('<span class="sep">|</span>')}
							td !{property.description}
					
			if author
				div.dox_tag_title Author
				div.dox_tag_detail
					#{author}

	div.body !{description.body}
